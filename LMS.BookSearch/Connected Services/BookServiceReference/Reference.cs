//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LMS.BookSearch.BookServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/LMS.BookStorage.Models")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CopiesAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublicationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CopiesAvailable {
            get {
                return this.CopiesAvailableField;
            }
            set {
                if ((this.CopiesAvailableField.Equals(value) != true)) {
                    this.CopiesAvailableField = value;
                    this.RaisePropertyChanged("CopiesAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverImageUrl {
            get {
                return this.CoverImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverImageUrlField, value) != true)) {
                    this.CoverImageUrlField = value;
                    this.RaisePropertyChanged("CoverImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN {
            get {
                return this.ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.ISBNField, value) != true)) {
                    this.ISBNField = value;
                    this.RaisePropertyChanged("ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublicationYear {
            get {
                return this.PublicationYearField;
            }
            set {
                if ((this.PublicationYearField.Equals(value) != true)) {
                    this.PublicationYearField = value;
                    this.RaisePropertyChanged("PublicationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryUpdate", Namespace="http://schemas.datacontract.org/2004/07/LMS.BookStorage.Models")]
    [System.SerializableAttribute()]
    public partial class InventoryUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityChangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BookIdField, value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityChange {
            get {
                return this.QuantityChangeField;
            }
            set {
                if ((this.QuantityChangeField.Equals(value) != true)) {
                    this.QuantityChangeField = value;
                    this.RaisePropertyChanged("QuantityChange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookServiceReference.IBookService")]
    public interface IBookService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetAllBooks", ReplyAction="http://tempuri.org/IBookService/GetAllBooksResponse")]
        LMS.BookSearch.BookServiceReference.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetAllBooks", ReplyAction="http://tempuri.org/IBookService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBookById", ReplyAction="http://tempuri.org/IBookService/GetBookByIdResponse")]
        LMS.BookSearch.BookServiceReference.Book GetBookById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBookById", ReplyAction="http://tempuri.org/IBookService/GetBookByIdResponse")]
        System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book> GetBookByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/AddBook", ReplyAction="http://tempuri.org/IBookService/AddBookResponse")]
        LMS.BookSearch.BookServiceReference.Book AddBook(LMS.BookSearch.BookServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/AddBook", ReplyAction="http://tempuri.org/IBookService/AddBookResponse")]
        System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book> AddBookAsync(LMS.BookSearch.BookServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateBook", ReplyAction="http://tempuri.org/IBookService/UpdateBookResponse")]
        LMS.BookSearch.BookServiceReference.Book UpdateBook(LMS.BookSearch.BookServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateBook", ReplyAction="http://tempuri.org/IBookService/UpdateBookResponse")]
        System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book> UpdateBookAsync(LMS.BookSearch.BookServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/DeleteBook", ReplyAction="http://tempuri.org/IBookService/DeleteBookResponse")]
        bool DeleteBook(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/DeleteBook", ReplyAction="http://tempuri.org/IBookService/DeleteBookResponse")]
        System.Threading.Tasks.Task<bool> DeleteBookAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBooksByCategory", ReplyAction="http://tempuri.org/IBookService/GetBooksByCategoryResponse")]
        LMS.BookSearch.BookServiceReference.Book[] GetBooksByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBooksByCategory", ReplyAction="http://tempuri.org/IBookService/GetBooksByCategoryResponse")]
        System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book[]> GetBooksByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateInventory", ReplyAction="http://tempuri.org/IBookService/UpdateInventoryResponse")]
        bool UpdateInventory(LMS.BookSearch.BookServiceReference.InventoryUpdate update);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateInventory", ReplyAction="http://tempuri.org/IBookService/UpdateInventoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateInventoryAsync(LMS.BookSearch.BookServiceReference.InventoryUpdate update);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookServiceChannel : LMS.BookSearch.BookServiceReference.IBookService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceClient : System.ServiceModel.ClientBase<LMS.BookSearch.BookServiceReference.IBookService>, LMS.BookSearch.BookServiceReference.IBookService {
        
        public BookServiceClient() {
        }
        
        public BookServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LMS.BookSearch.BookServiceReference.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public LMS.BookSearch.BookServiceReference.Book GetBookById(string id) {
            return base.Channel.GetBookById(id);
        }
        
        public System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book> GetBookByIdAsync(string id) {
            return base.Channel.GetBookByIdAsync(id);
        }
        
        public LMS.BookSearch.BookServiceReference.Book AddBook(LMS.BookSearch.BookServiceReference.Book book) {
            return base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book> AddBookAsync(LMS.BookSearch.BookServiceReference.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public LMS.BookSearch.BookServiceReference.Book UpdateBook(LMS.BookSearch.BookServiceReference.Book book) {
            return base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book> UpdateBookAsync(LMS.BookSearch.BookServiceReference.Book book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public bool DeleteBook(string id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookAsync(string id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public LMS.BookSearch.BookServiceReference.Book[] GetBooksByCategory(string category) {
            return base.Channel.GetBooksByCategory(category);
        }
        
        public System.Threading.Tasks.Task<LMS.BookSearch.BookServiceReference.Book[]> GetBooksByCategoryAsync(string category) {
            return base.Channel.GetBooksByCategoryAsync(category);
        }
        
        public bool UpdateInventory(LMS.BookSearch.BookServiceReference.InventoryUpdate update) {
            return base.Channel.UpdateInventory(update);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInventoryAsync(LMS.BookSearch.BookServiceReference.InventoryUpdate update) {
            return base.Channel.UpdateInventoryAsync(update);
        }
    }
}
