//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryManagementSystem.BookServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookServiceReference.IBookService")]
    public interface IBookService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetAllBooks", ReplyAction="http://tempuri.org/IBookService/GetAllBooksResponse")]
        LMS.BookStorage.Models.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetAllBooks", ReplyAction="http://tempuri.org/IBookService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<LMS.BookStorage.Models.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBookById", ReplyAction="http://tempuri.org/IBookService/GetBookByIdResponse")]
        LMS.BookStorage.Models.Book GetBookById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBookById", ReplyAction="http://tempuri.org/IBookService/GetBookByIdResponse")]
        System.Threading.Tasks.Task<LMS.BookStorage.Models.Book> GetBookByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/AddBook", ReplyAction="http://tempuri.org/IBookService/AddBookResponse")]
        LMS.BookStorage.Models.Book AddBook(LMS.BookStorage.Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/AddBook", ReplyAction="http://tempuri.org/IBookService/AddBookResponse")]
        System.Threading.Tasks.Task<LMS.BookStorage.Models.Book> AddBookAsync(LMS.BookStorage.Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateBook", ReplyAction="http://tempuri.org/IBookService/UpdateBookResponse")]
        LMS.BookStorage.Models.Book UpdateBook(LMS.BookStorage.Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateBook", ReplyAction="http://tempuri.org/IBookService/UpdateBookResponse")]
        System.Threading.Tasks.Task<LMS.BookStorage.Models.Book> UpdateBookAsync(LMS.BookStorage.Models.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/DeleteBook", ReplyAction="http://tempuri.org/IBookService/DeleteBookResponse")]
        bool DeleteBook(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/DeleteBook", ReplyAction="http://tempuri.org/IBookService/DeleteBookResponse")]
        System.Threading.Tasks.Task<bool> DeleteBookAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBooksByCategory", ReplyAction="http://tempuri.org/IBookService/GetBooksByCategoryResponse")]
        LMS.BookStorage.Models.Book[] GetBooksByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBooksByCategory", ReplyAction="http://tempuri.org/IBookService/GetBooksByCategoryResponse")]
        System.Threading.Tasks.Task<LMS.BookStorage.Models.Book[]> GetBooksByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateInventory", ReplyAction="http://tempuri.org/IBookService/UpdateInventoryResponse")]
        bool UpdateInventory(LMS.BookStorage.Models.InventoryUpdate update);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/UpdateInventory", ReplyAction="http://tempuri.org/IBookService/UpdateInventoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateInventoryAsync(LMS.BookStorage.Models.InventoryUpdate update);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookServiceChannel : LibraryManagementSystem.BookServiceReference.IBookService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceClient : System.ServiceModel.ClientBase<LibraryManagementSystem.BookServiceReference.IBookService>, LibraryManagementSystem.BookServiceReference.IBookService {
        
        public BookServiceClient() {
        }
        
        public BookServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LMS.BookStorage.Models.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<LMS.BookStorage.Models.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public LMS.BookStorage.Models.Book GetBookById(string id) {
            return base.Channel.GetBookById(id);
        }
        
        public System.Threading.Tasks.Task<LMS.BookStorage.Models.Book> GetBookByIdAsync(string id) {
            return base.Channel.GetBookByIdAsync(id);
        }
        
        public LMS.BookStorage.Models.Book AddBook(LMS.BookStorage.Models.Book book) {
            return base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task<LMS.BookStorage.Models.Book> AddBookAsync(LMS.BookStorage.Models.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public LMS.BookStorage.Models.Book UpdateBook(LMS.BookStorage.Models.Book book) {
            return base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task<LMS.BookStorage.Models.Book> UpdateBookAsync(LMS.BookStorage.Models.Book book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public bool DeleteBook(string id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookAsync(string id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public LMS.BookStorage.Models.Book[] GetBooksByCategory(string category) {
            return base.Channel.GetBooksByCategory(category);
        }
        
        public System.Threading.Tasks.Task<LMS.BookStorage.Models.Book[]> GetBooksByCategoryAsync(string category) {
            return base.Channel.GetBooksByCategoryAsync(category);
        }
        
        public bool UpdateInventory(LMS.BookStorage.Models.InventoryUpdate update) {
            return base.Channel.UpdateInventory(update);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInventoryAsync(LMS.BookStorage.Models.InventoryUpdate update) {
            return base.Channel.UpdateInventoryAsync(update);
        }
    }
}
